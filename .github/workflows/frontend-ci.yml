name: Frontend CI
on:
  push:
    branches:
    - feat/ci
  workflow_dispatch: 

jobs:
  frontend-ci:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set env based on branch
        run: |
          if [ "${{ github.ref_name }}" == "main" ]; then
            echo "AWS_ACCOUNT_ID=${{ vars.PROD_AWS_ACCOUNT_ID }}" >> $GITHUB_ENV
            echo "AWS_REGION=${{ vars.PROD_AWS_REGION }}" >> $GITHUB_ENV
            echo "ECR_URL=${{ vars.PROD_ECR_URL }}" >> $GITHUB_ENV
            echo "GHA_ROLE_ARN=${{ vars.PROD_GHA_ROLE_ARN }}" >> $GITHUB_ENV
            echo "REACT_APP_BASE_URL=${{ vars.PROD_REACT_APP_BASE_URL }}" >> $GITHUB_ENV
          else
            echo "AWS_ACCOUNT_ID=${{ vars.DEV_AWS_ACCOUNT_ID }}" >> $GITHUB_ENV
            echo "AWS_REGION=${{ vars.DEV_AWS_REGION }}" >> $GITHUB_ENV
            echo "ECR_URL=${{ vars.DEV_ECR_URL }}" >> $GITHUB_ENV
            echo "GHA_ROLE_ARN=${{ vars.DEV_GHA_ROLE_ARN }}" >> $GITHUB_ENV
            echo "REACT_APP_BASE_URL=${{ vars.DEV_REACT_APP_BASE_URL }}" >> $GITHUB_ENV
          fi

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ env.GHA_ROLE_ARN }}

      - name: Login to ECR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.ECR_URL }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          push: true
          tags: |
            ${{ env.ECR_URL }}/mern-shop/frontend:1.0.0
            ${{ env.ECR_URL }}/mern-shop/frontend:latest
          build-args: |
            REACT_APP_BASE_URL=${{ env.REACT_APP_BASE_URL }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # - name: Setup Terraform
      #   uses: hashicorp/setup-terraform@v3
      #   with:
      #     terraform_version: 1.9.5

      # - name: Terraform Init
      #   working-directory: eks-api
      #   run: |
      #     terraform init \
      #       -backend-config="region=${{ matrix.cluster.bucket_region }}" \
      #       -backend-config="bucket=${{ matrix.cluster.account_id }}-sso-eks-api" \
      #       -backend-config="key=${{ matrix.cluster.name }}/terraform.tfstate"

      # - name: Terraform Apply
      #   env:
      #     AWS_REGION: ${{ matrix.cluster.region }}
      #   working-directory: eks-api
      #   run: |
      #     terraform apply \
      #       -auto-approve \
      #       -var="cluster_name=${{ matrix.cluster.name }}"