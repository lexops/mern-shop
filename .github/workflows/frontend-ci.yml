name: Frontend CI
on:
  push:
    branches:
    - feat/ci
  workflow_dispatch: 

jobs:
  frontend-ci:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      # - name: Checkout
      #   uses: actions/checkout@v4

      - name: Set env based on branch
        run: |
          if [ "${{ github.ref_name }}" == "main" ]; then
            echo "AWS_ACCOUNT_ID=${{ vars.PROD_AWS_ACCOUNT_ID }}" >> $GITHUB_ENV
          else
            echo "AWS_ACCOUNT_ID=${{ vars.DEV_AWS_ACCOUNT_ID }}" >> $GITHUB_ENV
          fi

      - name: Print AWS Details
        run: |
          echo "AWS Account: $AWS_ACCOUNT_ID"

      # - name: Configure AWS Credentials
      #   uses: aws-actions/configure-aws-credentials@v4
      #   with:
      #     aws-region: us-east-1
      #     role-to-assume: arn:aws:iam::885405362274:role/GithubActionsRole

      # - name: Login to ECR
      #   uses: docker/login-action@v3
      #   with:
      #     registry: 885405362274.dkr.ecr.us-east-1.amazonaws.com

      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v3

      # - name: Build and push
      #   uses: docker/build-push-action@v6
      #   with:
      #     context: ./frontend
      #     push: true
      #     tags: |
      #       885405362274.dkr.ecr.us-east-1.amazonaws.com/mern-shop/frontend:latest
      #       885405362274.dkr.ecr.us-east-1.amazonaws.com/mern-shop/frontend:1.0.0
      #     build-args: |
      #       REACT_APP_BASE_URL=http://localhost:8000
      #     cache-from: type=gha
      #     cache-to: type=gha,mode=max

      # - name: Setup Terraform
      #   uses: hashicorp/setup-terraform@v3
      #   with:
      #     terraform_version: 1.9.5

      # - name: Terraform Init
      #   working-directory: eks-api
      #   run: |
      #     terraform init \
      #       -backend-config="region=${{ matrix.cluster.bucket_region }}" \
      #       -backend-config="bucket=${{ matrix.cluster.account_id }}-sso-eks-api" \
      #       -backend-config="key=${{ matrix.cluster.name }}/terraform.tfstate"

      # - name: Terraform Apply
      #   env:
      #     AWS_REGION: ${{ matrix.cluster.region }}
      #   working-directory: eks-api
      #   run: |
      #     terraform apply \
      #       -auto-approve \
      #       -var="cluster_name=${{ matrix.cluster.name }}"