name: Continous Integration

on:
  # pull_request:
  #   branches:
  #     - feat/ci
  #   types: [closed]
  #   paths:
  #     - 'frontend/**'
  #     - 'backend/**'
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      # tag: ${{ steps.semver.outputs.tag }}
      tag: v4.2.0
    steps:
      - name: Create semver tag based on PR labels
        id: semver
        uses: K-Phoen/semver-release-action@master
        with:
          release_branch: ${{ github.pull_request.base.ref }}
          release_strategy: tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - run: echo "tag ${{ needs.setup.outputs.tag }}"

  # frontend-build:
  #   name: Build Frontend
  #   runs-on: ubuntu-latest
  #   needs: setup
  #   if: ${{ github.event.pull_request.merged == true }}
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4

  #     - name: Configure AWS Credentials
  #       uses: aws-actions/configure-aws-credentials@v4
  #       with:
  #         aws-region: ${{ vars.DEV_AWS_REGION }}
  #         role-to-assume: ${{ vars.DEV_GHA_ROLE_ARN }}

  #     - name: Login to ECR
  #       uses: docker/login-action@v3
  #       with:
  #         registry: ${{ vars.DEV_ECR_URL }}

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v3

  #     - name: Build and push frontend
  #       uses: docker/build-push-action@v6
  #       with:
  #         context: ./frontend
  #         push: true
  #         tags: |
  #           ${{ vars.DEV_ECR_URL }}/mern-shop/frontend:${{ needs.setup.outputs.tag }}
  #           ${{ vars.DEV_ECR_URL }}/mern-shop/frontend:latest
  #         build-args: |
  #           REACT_APP_BASE_URL=${{ vars.DEV_REACT_APP_BASE_URL }}
  #         cache-from: type=gha
  #         cache-to: type=gha,mode=max

  # backend-build:
  #   name: Build Backend
  #   runs-on: ubuntu-latest
  #   needs: setup
  #   if: ${{ github.event.pull_request.merged == true }}
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
      
  #     - name: Configure AWS Credentials
  #       uses: aws-actions/configure-aws-credentials@v4
  #       with:
  #         aws-region: ${{ vars.DEV_AWS_REGION }}
  #         role-to-assume: ${{ vars.DEV_GHA_ROLE_ARN }}

  #     - name: Login to ECR
  #       uses: docker/login-action@v3
  #       with:
  #         registry: ${{ vars.DEV_ECR_URL }}

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v3

  #     - name: Build and push backend
  #       uses: docker/build-push-action@v6
  #       with:
  #         context: ./backend
  #         push: true
  #         tags: |
  #           ${{ vars.DEV_ECR_URL }}/mern-shop/backend:${{ needs.setup.outputs.tag }}
  #           ${{ vars.DEV_ECR_URL }}/mern-shop/backend:latest
  #         cache-from: type=gha
  #         cache-to: type=gha,mode=max

  # deploy-to-dev:
  #   name: Deploy to Dev
  #   runs-on: ubuntu-latest
  #   needs: 
  #     - setup
  #     - frontend-build
  #     - backend-build
  #   if: ${{ github.event.pull_request.merged == true }}
  #   steps:
  #     - name: Configure AWS Credentials
  #       uses: aws-actions/configure-aws-credentials@v4
  #       with:
  #         aws-region: ${{ vars.DEV_AWS_REGION }}
  #         role-to-assume: ${{ vars.DEV_GHA_ROLE_ARN }}

  #     - name: Update Kubeconfig
  #       run: |
  #         aws eks update-kubeconfig --name ${{ vars.DEV_AWS_EKS_NAME }} 

  #     - name: Deploy to Kubernetes (Dev)
  #       run: |
  #         helm upgrade mern-shop ./helm/charts/mern-shop \
  #           --install \
  #           --create-namespace \
  #           --namespace dev \
  #           --set frontend.frontend.image.tag=${{ needs.setup.outputs.tag }} \
  #           --set backend.backend.image.tag=${{ needs.setup.outputs.tag }}
